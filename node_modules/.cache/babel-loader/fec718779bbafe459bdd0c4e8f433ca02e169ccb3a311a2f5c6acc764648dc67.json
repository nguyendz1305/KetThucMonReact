{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\NguyenVuNguyen\\\\src\\\\components\\\\Weather.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faCloudSun, faCloudRain, faSnowflake, faCloud } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState(\"\"); // Thành phố người dùng chọn\n  const [weatherData, setWeatherData] = useState(null); // Dữ liệu thời tiết\n  const [error, setError] = useState(\"\"); // Thông báo lỗi\n  const [loading, setLoading] = useState(false); // Trạng thái tải dữ liệu\n  const [unit, setUnit] = useState(\"metric\"); // Đơn vị Celsius (metric) hoặc Fahrenheit (imperial)\n  const [isWeatherFetched, setIsWeatherFetched] = useState(false); // Kiểm tra dữ liệu đã được lấy chưa\n\n  const API_KEY = \"973fff3498ae9327464ee9d4138e5f7c\";\n  const cities = [\"Athens\",\n  // Hy Lạp\n  \"Bangkok\",\n  // Thái Lan\n  \"Barcelona\",\n  // Tây Ban Nha\n  \"Beijing\",\n  // Trung Quốc\n  \"Berlin\",\n  // Đức\n  \"Buenos Aires\",\n  // Argentina\n  \"Cairo\",\n  // Ai Cập\n  \"Cape Town\",\n  // Nam Phi\n  \"Chicago\",\n  // Mỹ\n  \"Dubai\",\n  // UAE\n  \"Hanoi\",\n  //VietNam\n  \"Hong Kong\",\n  // Hồng Kông\n  \"Istanbul\",\n  // Thổ Nhĩ Kỳ\n  \"Jakarta\",\n  // Indonesia\n  \"Kuala Lumpur\",\n  // Malaysia\n  \"Lagos\",\n  // Nigeria\n  \"London\",\n  // Anh\n  \"Los Angeles\",\n  // Mỹ\n  \"Madrid\",\n  // Tây Ban Nha\n  \"Mexico City\",\n  // Mexico\n  \"Moscow\",\n  // Nga\n  \"Mumbai\",\n  // Ấn Độ\n  \"New York\",\n  // Mỹ\n  \"Paris\",\n  // Pháp\n  \"Rio de Janeiro\",\n  // Brazil\n  \"Rome\",\n  // Ý\n  \"San Francisco\",\n  // Mỹ\n  \"Seoul\",\n  // Hàn Quốc\n  \"Shanghai\",\n  // Trung Quốc\n  \"Singapore\",\n  // Singapore\n  \"Sydney\",\n  // Úc\n  \"Tokyo\",\n  // Nhật Bản\n  \"Toronto\" // Canada\n  ];\n\n  // Hàm làm tròn kết quả đến 1 chữ số thập phân\n  const roundToOneDecimal = value => {\n    return Math.round(value * 10) / 10;\n  };\n\n  // Hàm để lấy dữ liệu thời tiết từ API\n  const fetchWeather = async () => {\n    if (!city) {\n      setError(\"Vui lòng chọn một thành phố!\");\n      return;\n    }\n    setLoading(true);\n    try {\n      setError(\"\");\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${API_KEY}&lang=vi`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error(\"Không tìm thấy thành phố! Vui lòng kiểm tra lại.\");\n        }\n        throw new Error(\"Đã xảy ra lỗi. Vui lòng thử lại sau.\");\n      }\n      const data = await response.json();\n      setWeatherData(data);\n      setIsWeatherFetched(true);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError(\"Đã xảy ra lỗi không xác định.\");\n      }\n      setWeatherData(null);\n      setIsWeatherFetched(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Hàm chuyển đổi đơn vị khi nhấn vào \"Chuyển sang °F\" hoặc \"Chuyển sang °C\"\n  const toggleUnit = () => {\n    setUnit(unit === \"metric\" ? \"imperial\" : \"metric\");\n  };\n\n  // Hàm lấy biểu tượng thời tiết tương ứng\n  const getIcon = icon => {\n    switch (icon) {\n      case \"01d\":\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSun,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this);\n      case \"02d\":\n      case \"02n\":\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCloudSun,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this);\n      case \"03d\":\n      case \"03n\":\n      case \"04d\":\n      case \"04n\":\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCloud,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this);\n      case \"09d\":\n      case \"09n\":\n      case \"10d\":\n      case \"10n\":\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCloudRain,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 16\n        }, this);\n      case \"13d\":\n      case \"13n\":\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSnowflake,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCloud,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Hàm xử lý khi thay đổi thành phố\n  const handleCityChange = e => {\n    setCity(e.target.value);\n    setWeatherData(null); // Reset dữ liệu thời tiết\n    setIsWeatherFetched(false); // Reset trạng thái đã lấy dữ liệu\n  };\n  useEffect(() => {\n    // Khi người dùng chọn thành phố, mặc định sẽ lấy dữ liệu với Celsius (°C)\n    if (city) {\n      fetchWeather();\n    }\n  }, [city, unit]); // Khi thay đổi city hoặc unit, sẽ cập nhật lại dữ liệu thời tiết\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u1EE8ng D\\u1EE5ng Th\\u1EDDi Ti\\u1EBFt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: city,\n      onChange: handleCityChange // Gọi hàm khi thay đổi thành phố\n      ,\n      className: \"city-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Ch\\u1ECDn th\\xE0nh ph\\u1ED1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), cities.map((cityName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cityName,\n        children: cityName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeather,\n        className: \"weather-button\",\n        children: loading ? \"Đang tải...\" : \"Lấy thời tiết\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), isWeatherFetched && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleUnit,\n        className: \"weather-button\",\n        children: [\"Chuy\\u1EC3n sang \", unit === \"metric\" ? \"°F\" : \"°C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-condition\",\n        children: [getIcon(weatherData.weather[0].icon), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nhi\\u1EC7t \\u0111\\u1ED9:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [unit === \"metric\" ? roundToOneDecimal(weatherData.main.temp) : roundToOneDecimal(weatherData.main.temp), \" \", unit === \"metric\" ? \"°C\" : \"°F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0110\\u1ED9 \\u1EA9m: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\xECnh tr\\u1EA1ng: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"uqQI3gRByxFbWkZVsc7JY2Shgmk=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faSun","faCloudSun","faCloudRain","faSnowflake","faCloud","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weatherData","setWeatherData","error","setError","loading","setLoading","unit","setUnit","isWeatherFetched","setIsWeatherFetched","API_KEY","cities","roundToOneDecimal","value","Math","round","fetchWeather","response","fetch","ok","status","Error","data","json","err","message","toggleUnit","getIcon","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","handleCityChange","e","target","children","onChange","map","cityName","index","onClick","name","weather","main","temp","humidity","description","_c","$RefreshReg$"],"sources":["C:/Users/hp/Documents/NguyenVuNguyen/src/components/Weather.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSun,\r\n  faCloudSun,\r\n  faCloudRain,\r\n  faSnowflake,\r\n  faCloud,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Weather.css\";\r\n\r\ninterface WeatherData {\r\n  name: string;\r\n  weather: Array<{ icon: string; description: string }>;\r\n  main: { temp: number; humidity: number };\r\n}\r\n\r\nconst Weather = () => {\r\n  const [city, setCity] = useState<string>(\"\"); // Thành phố người dùng chọn\r\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null); // Dữ liệu thời tiết\r\n  const [error, setError] = useState<string>(\"\"); // Thông báo lỗi\r\n  const [loading, setLoading] = useState<boolean>(false); // Trạng thái tải dữ liệu\r\n  const [unit, setUnit] = useState<\"metric\" | \"imperial\">(\"metric\"); // Đơn vị Celsius (metric) hoặc Fahrenheit (imperial)\r\n  const [isWeatherFetched, setIsWeatherFetched] = useState<boolean>(false); // Kiểm tra dữ liệu đã được lấy chưa\r\n\r\n  const API_KEY = \"973fff3498ae9327464ee9d4138e5f7c\";\r\n  const cities = [\r\n    \"Athens\", // Hy Lạp\r\n    \"Bangkok\", // Thái Lan\r\n    \"Barcelona\", // Tây Ban Nha\r\n    \"Beijing\", // Trung Quốc\r\n    \"Berlin\", // Đức\r\n    \"Buenos Aires\", // Argentina\r\n    \"Cairo\", // Ai Cập\r\n    \"Cape Town\", // Nam Phi\r\n    \"Chicago\", // Mỹ\r\n    \"Dubai\", // UAE\r\n    \"Hanoi\", //VietNam\r\n    \"Hong Kong\", // Hồng Kông\r\n    \"Istanbul\", // Thổ Nhĩ Kỳ\r\n    \"Jakarta\", // Indonesia\r\n    \"Kuala Lumpur\", // Malaysia\r\n    \"Lagos\", // Nigeria\r\n    \"London\", // Anh\r\n    \"Los Angeles\", // Mỹ\r\n    \"Madrid\", // Tây Ban Nha\r\n    \"Mexico City\", // Mexico\r\n    \"Moscow\", // Nga\r\n    \"Mumbai\", // Ấn Độ\r\n    \"New York\", // Mỹ\r\n    \"Paris\", // Pháp\r\n    \"Rio de Janeiro\", // Brazil\r\n    \"Rome\", // Ý\r\n    \"San Francisco\", // Mỹ\r\n    \"Seoul\", // Hàn Quốc\r\n    \"Shanghai\", // Trung Quốc\r\n    \"Singapore\", // Singapore\r\n    \"Sydney\", // Úc\r\n    \"Tokyo\", // Nhật Bản\r\n    \"Toronto\", // Canada\r\n  ];\r\n\r\n  // Hàm làm tròn kết quả đến 1 chữ số thập phân\r\n  const roundToOneDecimal = (value: number) => {\r\n    return Math.round(value * 10) / 10;\r\n  };\r\n\r\n  // Hàm để lấy dữ liệu thời tiết từ API\r\n  const fetchWeather = async () => {\r\n    if (!city) {\r\n      setError(\"Vui lòng chọn một thành phố!\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      setError(\"\");\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${API_KEY}&lang=vi`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          throw new Error(\"Không tìm thấy thành phố! Vui lòng kiểm tra lại.\");\r\n        }\r\n        throw new Error(\"Đã xảy ra lỗi. Vui lòng thử lại sau.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n      setIsWeatherFetched(true);\r\n    } catch (err) {\r\n      if (err instanceof Error) {\r\n        setError(err.message);\r\n      } else {\r\n        setError(\"Đã xảy ra lỗi không xác định.\");\r\n      }\r\n      setWeatherData(null);\r\n      setIsWeatherFetched(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Hàm chuyển đổi đơn vị khi nhấn vào \"Chuyển sang °F\" hoặc \"Chuyển sang °C\"\r\n  const toggleUnit = () => {\r\n    setUnit(unit === \"metric\" ? \"imperial\" : \"metric\");\r\n  };\r\n\r\n  // Hàm lấy biểu tượng thời tiết tương ứng\r\n  const getIcon = (icon: string) => {\r\n    switch (icon) {\r\n      case \"01d\":\r\n        return <FontAwesomeIcon icon={faSun} className=\"weather-icon\" />;\r\n      case \"02d\":\r\n      case \"02n\":\r\n        return <FontAwesomeIcon icon={faCloudSun} className=\"weather-icon\" />;\r\n      case \"03d\":\r\n      case \"03n\":\r\n      case \"04d\":\r\n      case \"04n\":\r\n        return <FontAwesomeIcon icon={faCloud} className=\"weather-icon\" />;\r\n      case \"09d\":\r\n      case \"09n\":\r\n      case \"10d\":\r\n      case \"10n\":\r\n        return <FontAwesomeIcon icon={faCloudRain} className=\"weather-icon\" />;\r\n      case \"13d\":\r\n      case \"13n\":\r\n        return <FontAwesomeIcon icon={faSnowflake} className=\"weather-icon\" />;\r\n      default:\r\n        return <FontAwesomeIcon icon={faCloud} className=\"weather-icon\" />;\r\n    }\r\n  };\r\n\r\n  // Hàm xử lý khi thay đổi thành phố\r\n  const handleCityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setCity(e.target.value);\r\n    setWeatherData(null); // Reset dữ liệu thời tiết\r\n    setIsWeatherFetched(false); // Reset trạng thái đã lấy dữ liệu\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Khi người dùng chọn thành phố, mặc định sẽ lấy dữ liệu với Celsius (°C)\r\n    if (city) {\r\n      fetchWeather();\r\n    }\r\n  }, [city, unit]); // Khi thay đổi city hoặc unit, sẽ cập nhật lại dữ liệu thời tiết\r\n\r\n  return (\r\n    <div className=\"weather-container\">\r\n      <h1>Ứng Dụng Thời Tiết</h1>\r\n\r\n      <select\r\n        value={city}\r\n        onChange={handleCityChange} // Gọi hàm khi thay đổi thành phố\r\n        className=\"city-dropdown\"\r\n      >\r\n        <option value=\"\">Chọn thành phố</option>\r\n        {cities.map((cityName, index) => (\r\n          <option key={index} value={cityName}>\r\n            {cityName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"button-group\">\r\n        <button onClick={fetchWeather} className=\"weather-button\">\r\n          {loading ? \"Đang tải...\" : \"Lấy thời tiết\"}\r\n        </button>\r\n        {isWeatherFetched && (\r\n          <button onClick={toggleUnit} className=\"weather-button\">\r\n            Chuyển sang {unit === \"metric\" ? \"°F\" : \"°C\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {weatherData && (\r\n        <div className=\"weather-info\">\r\n          <h2>{weatherData.name}</h2>\r\n          <div className=\"weather-condition\">\r\n            {getIcon(weatherData.weather[0].icon)}\r\n            <p>\r\n              Nhiệt độ:{\" \"}\r\n              <span>\r\n                {unit === \"metric\"\r\n                  ? roundToOneDecimal(weatherData.main.temp)\r\n                  : roundToOneDecimal(weatherData.main.temp)}{\" \"}\r\n                {unit === \"metric\" ? \"°C\" : \"°F\"}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Độ ẩm: <span>{weatherData.main.humidity}%</span>\r\n            </p>\r\n            <p>\r\n              Tình trạng: <span>{weatherData.weather[0].description}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}